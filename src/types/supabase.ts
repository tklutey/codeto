/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/learning_unit': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.learning_unit.id'];
          created_at?: parameters['rowFilter.learning_unit.created_at'];
          course_id?: parameters['rowFilter.learning_unit.course_id'];
          unit_name?: parameters['rowFilter.learning_unit.unit_name'];
          unit_sequence?: parameters['rowFilter.learning_unit.unit_sequence'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['learning_unit'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** learning_unit */
          learning_unit?: definitions['learning_unit'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.learning_unit.id'];
          created_at?: parameters['rowFilter.learning_unit.created_at'];
          course_id?: parameters['rowFilter.learning_unit.course_id'];
          unit_name?: parameters['rowFilter.learning_unit.unit_name'];
          unit_sequence?: parameters['rowFilter.learning_unit.unit_sequence'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.learning_unit.id'];
          created_at?: parameters['rowFilter.learning_unit.created_at'];
          course_id?: parameters['rowFilter.learning_unit.course_id'];
          unit_name?: parameters['rowFilter.learning_unit.unit_name'];
          unit_sequence?: parameters['rowFilter.learning_unit.unit_sequence'];
        };
        body: {
          /** learning_unit */
          learning_unit?: definitions['learning_unit'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/course': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.course.id'];
          created_at?: parameters['rowFilter.course.created_at'];
          course_name?: parameters['rowFilter.course.course_name'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['course'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** course */
          course?: definitions['course'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.course.id'];
          created_at?: parameters['rowFilter.course.created_at'];
          course_name?: parameters['rowFilter.course.course_name'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.course.id'];
          created_at?: parameters['rowFilter.course.created_at'];
          course_name?: parameters['rowFilter.course.course_name'];
        };
        body: {
          /** course */
          course?: definitions['course'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  learning_unit: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `course.id`.<fk table='course' column='id'/>
     */
    course_id?: number;
    /** Format: text */
    unit_name?: string;
    /** Format: bigint */
    unit_sequence?: number;
  };
  course: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    course_name?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description learning_unit */
  'body.learning_unit': definitions['learning_unit'];
  /** Format: bigint */
  'rowFilter.learning_unit.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.learning_unit.created_at': string;
  /** Format: bigint */
  'rowFilter.learning_unit.course_id': string;
  /** Format: text */
  'rowFilter.learning_unit.unit_name': string;
  /** Format: bigint */
  'rowFilter.learning_unit.unit_sequence': string;
  /** @description course */
  'body.course': definitions['course'];
  /** Format: bigint */
  'rowFilter.course.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.course.created_at': string;
  /** Format: text */
  'rowFilter.course.course_name': string;
}

export interface operations {}

export interface external {}
